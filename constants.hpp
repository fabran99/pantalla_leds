const int ROWS = 6;
const int COLUMNS = 18;
const int LED_COUNT = ROWS * COLUMNS;
const int LED_BRIGHTNESS = 10;

const int NUMBER_HEIGHT = 6;
const int NUMBER_WIDTH = 3;
const int NUMBER_POSITIONS[11][6][3] = {
    {
        {1, 1, 1},
        {1, 0, 1},
        {1, 0, 1},
        {1, 0, 1},
        {1, 0, 1},
        {1, 1, 1},
    },
    {
        {0, 0, 1},
        {0, 0, 1},
        {0, 0, 1},
        {0, 0, 1},
        {0, 0, 1},
        {0, 0, 1},
    },
    {
        {1, 1, 1},
        {0, 0, 1},
        {1, 1, 1},
        {1, 0, 0},
        {1, 0, 0},
        {1, 1, 1},
    },
    {
        {1, 1, 1},
        {0, 0, 1},
        {1, 1, 1},
        {0, 0, 1},
        {0, 0, 1},
        {1, 1, 1},
    },
    {
        {1, 0, 1},
        {1, 0, 1},
        {1, 1, 1},
        {0, 0, 1},
        {0, 0, 1},
        {0, 0, 1},
    },
    {
        {1, 1, 1},
        {1, 0, 0},
        {1, 1, 1},
        {0, 0, 1},
        {0, 0, 1},
        {1, 1, 1},
    },
    {
        {1, 1, 1},
        {1, 0, 0},
        {1, 1, 1},
        {1, 0, 1},
        {1, 0, 1},
        {1, 1, 1},
    },
    {
        {1, 1, 1},
        {0, 0, 1},
        {0, 0, 1},
        {0, 0, 1},
        {0, 0, 1},
        {0, 0, 1},
    },
    {
        {1, 1, 1},
        {1, 0, 1},
        {1, 1, 1},
        {1, 0, 1},
        {1, 0, 1},
        {1, 1, 1},
    },
    {
        {1, 1, 1},
        {1, 0, 1},
        {1, 1, 1},
        {0, 0, 1},
        {0, 0, 1},
        {1, 1, 1},
    },
    //  este ultimo elemento es el tick
    {
        {0, 0, 0},
        {0, 1, 0},
        {0, 0, 0},
        {0, 0, 0},
        {0, 1, 0},
        {0, 0, 0}},
};

const int DIGIT_POSITIONS[5][2] = {
    {0, 0},
    {0, 4},
    {0, 10},
    {0, 14},
    //  Este ultimo es el tick
    {0, 7},
};

// const int LETTER_POSITIONS[26][6][5] = {
//   // generate array for letter a
//   {
//     {
//       {0,0,1,0,0},
//       {0,1,0,1,0},
//       {0,1,0,1,0},
//       {0,1,1,1,0},
//       {0,1,0,1,0},
//       {0,1,0,1,0},
//     },
//     // generate array for letter B
//     {
//       {}
//     }
//   }

// }
